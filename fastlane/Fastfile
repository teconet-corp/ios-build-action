default_platform(:ios)

platform :ios do
  desc "Export ipa"
  lane :export_ipa do
    keychain_password = SecureRandom.uuid
    create_keychain(
      name: "ios-build.keychain",
      password: keychain_password,
      default_keychain: true,
      unlock: true,
      timeout: 3600
    )
    import_certificate(
      certificate_path: "ios-build.p12",
      certificate_password: ENV["CERTIFICATE_PASSWORD"],
      keychain_name: "ios-build.keychain",
      keychain_password: keychain_password
    )
    install_provisioning_profile(
      path: "ios-build.mobileprovision"
    )
    disable_automatic_code_signing(
      path: ENV["PROJECT_PATH"]
    )
    update_project_provisioning(
      xcodeproj: ENV["PROJECT_PATH"],
      profile: "ios-build.mobileprovision",
      code_signing_identity: ENV["CODE_SIGNING_IDENTITY"]
    )
    update_project_team(
      path: ENV["PROJECT_PATH"],
      teamid: ENV["TEAM_ID"]
    )
    if ENV["WORKSPACE_PATH"] != ""
      build_app(
        workspace: ENV["WORKSPACE_PATH"],
        configuration: ENV["CONFIGURATION"],
        scheme: ENV["SCHEME"],
        output_name: ENV["OUTPUT_PATH"],
        clean: true,
        export_method: ENV["EXPORT_METHOD"]
      )
    else
      build_app(
        project: ENV["PROJECT_PATH"],
        configuration: ENV["CONFIGURATION"],
        scheme: ENV["SCHEME"],
        output_name: ENV["OUTPUT_PATH"],
        clean: true,
        export_method: ENV["EXPORT_METHOD"]
      )
    end
    gym(
      export_options: {
        provisioningProfiles: {
          "jp.teconet.SpaiaAiKeiba" => "Adhoc SPAIA AI Keiba"
        }
      }
    )
    delete_keychain(
      name: "ios-build.keychain"
    )
  end
end
